name: Create Release

on:
  push:
    branches:
      - release # or your default branch

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Get latest tag from main branch
        id: get_latest_tag
        run: |
          git fetch --all --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1 origin/main))
          echo "::set-output name=latest_tag::$latest_tag"

      - name: Generate changelog
        id: generate_changelog
        run: |
          changelog=$(git log ${{ steps.get_latest_tag.outputs.latest_tag }}..HEAD --pretty=format:"- %s%n%b")
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_tag.outputs.latest_tag }}
          release_name: Release ${{ steps.get_latest_tag.outputs.latest_tag }}
          body: |
            Changes in this Release:
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false

  build:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "20"
      - run: npm ci
      - run: npm run build
      - run: npm pack
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-package
          path: "*.tgz"

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          name: npm-package

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: list files
        run: ls

      - name: Publish to npm
        run: npm publish *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
